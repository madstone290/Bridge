@using Bridge.Domain.Places.Enums
@using Bridge.WebApp.Pages.Common.ViewModels
@using Bridge.WebApp.Pages.Common.Views.Components
@inject IPlaceFormViewModel VM

<MudDialog>
    <DialogContent>
        <div style="max-height:750px; padding:10px; overflow-y: scroll">
            <MudForm @bind-IsValid="VM.IsPlaceValid"
                     ValidationDelay="0">
                <div>
                    <MudText Typo="Typo.h5">기본 정보</MudText>
                    <MudSpacer />
                    <MudDivider Style="margin-bottom:4px;"/>
                    <MudGrid Spacing="1">
                        <MudItem xs="12">
                            <MudImage Src="@VM.Place.ImageUrl" Width="200" Height="200" />
                        </MudItem>
                        <MudItem xs="9">
                            <MudButton HtmlTag="label"
                                       Variant="Variant.Outlined"
                                       Color="Color.Primary"
                                       FullWidth="true"
                                       StartIcon="@Icons.Filled.CloudUpload"
                                       for="fileInput">이미지 업로드</MudButton>
                            <InputFile id="fileInput" hidden OnChange="VM.OnImageFileChange" accept=".jpg, .png" />
                        </MudItem>
                          <MudItem xs="3">
                        <MudButton HtmlTag="label"
                                   Variant="Variant.Outlined"
                                   Color="Color.Secondary"
                                   FullWidth="true"
                                   StartIcon="@Icons.Filled.Delete"
                                   OnClick="VM.OnDeleteFileClick">이미지 삭제</MudButton>
                    </MudItem>
                        <MudItem xs="12">
                            <AdvSelect @bind-Value="VM.Place.Type"
                                       T="PlaceType"
                                       Validation="@(VM.GetValidation(x=> x.Type))"
                                       Label="타입">
                                @{
                                    foreach (var placeType in Enum.GetValues<PlaceType>())
                                    {
                                                                <MudSelectItem Value="@placeType"></MudSelectItem>
                                    }
                                }
                            </AdvSelect>
                        </MudItem>
                        <MudItem xs="12">
                            <AdvTextField @bind-Value="VM.Place.Name"
                                          Validation="@(VM.GetValidation(x=> x.Name))"
                                          Label="장소명" />
                        </MudItem>
                        <MudItem xs="12">
                            <AdvTextField @bind-Value="VM.Place.BaseAddress"
                                          Label="기본주소"
                                          Validation="@(VM.GetValidation(x=> x.BaseAddress))" />
                        </MudItem>
                        <MudItem xs="12">
                            <AdvTextField @bind-Value="VM.Place.DetailAddress"
                                          Label="상세주소"
                                          Validation="@(VM.GetValidation(x=> x.DetailAddress))" />
                        </MudItem>
                        <MudItem xs="12">
                            <AdvTextField @bind-Value="VM.Place.ContactNumber"
                                          Validation="@(VM.GetValidation(x=> x.ContactNumber))"
                                          Label="연락처" />
                        </MudItem>
                        <MudItem xs="12">
                            <AdvSelect @bind-SelectedValues="VM.Place.Categories"
                                       T="PlaceCategory"
                                       MultiSelection="true"
                                       Label="카테고리"
                                       Validation="@(VM.GetValidation(x=> x.Categories))">
                                @foreach (var category in Enum.GetValues<PlaceCategory>())
                                {
                                    <MudSelectItem Value="category"></MudSelectItem>
                                }
                            </AdvSelect>
                        </MudItem>
                    </MudGrid>
                </div>
                <div style="margin-top:30px;">
                    <MudText Typo="Typo.h5">영업시간</MudText>
                    <MudSpacer />
                    <MudDivider Style="margin-bottom:4px;" />
                    <MudGrid Spacing="1">
                        <MudItem xs="12">
                            @foreach (var openingTime in VM.Place.OpeningTimes)
                            {
                                <OpeningTimeView OpeningTime="openingTime" IsReadOnly="false" />
                            }
                        </MudItem>
                    </MudGrid>
                </div>
            </MudForm>
        </div>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled"
                   Color="Color.Error"
                   OnClick="VM.OnCancelClick">
            취소
        </MudButton>
        <MudButton Variant="Variant.Filled"
                   Color="Color.Primary"
                   OnClick="VM.OnSaveClick">
            저장
        </MudButton>
    </DialogActions>
</MudDialog>
@code{

    [CascadingParameter]
    public MudDialogInstance MudDialog { get; set; } = null!;

    /// <summary>
    /// 장소 아이디
    /// </summary>
    [Parameter]
    public Guid PlaceId { get; set; }

    /// <summary>
    /// 폼 모드
    /// </summary>
    [Parameter]
    public FormMode FormMode { get; set; }

    protected override async Task OnInitializedAsync()
    {
        VM.MudDialog = MudDialog;
        VM.PlaceId = PlaceId;
        VM.FormMode = FormMode;
        await VM.Initialize();
    }
}