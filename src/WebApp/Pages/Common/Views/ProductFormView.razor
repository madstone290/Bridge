@using Bridge.Domain.Products.Enums
@using Bridge.WebApp.Pages.Common.ViewModels
@inject IProductFormViewModel VM

<MudDialog>
    <DialogContent>
        <MudForm @bind-IsValid="VM.IsProductValid"
                 ValidationDelay="0">
            <MudGrid Spacing="1">
                <MudItem xs="12">
                    <MudImage Src="@VM.Product.ImageSrc" Width="200" Height="200" ObjectPosition="ObjectPosition.Center" />
                </MudItem>
                <MudItem xs="9">
                    <MudButton HtmlTag="label"
                               Variant="Variant.Outlined"
                               Color="Color.Primary"
                               FullWidth="true"
                               StartIcon="@Icons.Filled.CloudUpload"
                               for="fileInput">이미지 업로드</MudButton>
                    <InputFile id="fileInput" hidden OnChange="VM.OnImageFileChanged" accept=".jpg, .png" />
                </MudItem>
                <MudItem xs="3">
                    <MudButton HtmlTag="label"
                               Variant="Variant.Outlined"
                               Color="Color.Secondary"
                               FullWidth="true"
                               StartIcon="@Icons.Filled.Delete"
                               OnClick="VM.OnDeleteFileClick">이미지 삭제</MudButton>
                </MudItem>
                <MudItem xs="12">
                    <AdvSelect @bind-Value="VM.Product.Type"
                               T="ProductType"
                               Validation="@(VM.GetValidation(x=> x.Type))"
                               Label="제품타입"
                               AutoFocus="true">
                        @{
                            foreach (var placeType in Enum.GetValues<ProductType>())
                            {
                                <MudSelectItem Value="@placeType"></MudSelectItem>
                            }
                        }
                    </AdvSelect>
                </MudItem>
                <MudItem xs="12">
                    <AdvTextField @bind-Value="VM.Product.Name"
                                  Validation="@VM.GetValidation(x=> x.Name)"
                                  Label="제품명" />
                </MudItem>
                <MudItem xs="12">
                    <AdvTextField @bind-Value="VM.Product.Price"
                                  Label="가격"
                                  Validation="@VM.GetValidation(x=> x.Price)" />
                </MudItem>
                <MudItem xs="12">
                    <AdvSelect @bind-SelectedValues="VM.Product.Categories"
                               T="ProductCategory"
                               MultiSelection="true"
                               Label="카테고리"
                               Validation="@(VM.GetValidation(x=> x.Categories))">
                        @foreach (var category in Enum.GetValues<ProductCategory>())
                        {
                            <MudSelectItem Value="category"></MudSelectItem>
                        }
                    </AdvSelect>
                </MudItem>
            </MudGrid>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled"
                   Color="Color.Error"
                   OnClick="VM.OnCancelClick">
            취소
        </MudButton>
        <MudButton Variant="Variant.Filled"
                   Color="Color.Primary"
                   OnClick="VM.OnSaveClick">
            저장
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    /// <summary>
    /// 폼 모드
    /// </summary>
    [Parameter]
    public FormMode FormMode { get; set; }

    /// <summary>
    /// 제품 아이디
    /// </summary>
    [Parameter]
    public Guid ProductId { get; set; }

    /// <summary>
    /// 장소 아이디
    /// </summary>
    [Parameter]
    public Guid PlaceId { get; set; }

    [CascadingParameter]
    public MudDialogInstance MudDialog { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        VM.ProductId = ProductId;
        VM.PlaceId = PlaceId;
        VM.MudDialog = MudDialog;
        VM.FormMode = FormMode;
        await VM.Initialize();
    }
}